[settings]
# sphere or .obj file location
object_file = Bunny.ply
working_dir = C:/Blender
out_dir = C:/Blender/Output/solar_brdf

[rendering]
resolution_x = 640
resolution_y = 480
samples = 100
max_bounces = 4
min_bounces = 0
glossy_bounces = 4
transmission_bounces = 8
volume_bounces = 1
transparent_max_bounces = 4
transparent_min_bounces = 0
tile_x = 256
tile_y = 256
# Enable denoising option (Denoising takes more time to render.)
denoising = True
# If Blender version is under 2.80, use 'denoising_legacy' instead of 'denoising'.
denoising_legacy = False
# background_color = 20, 20, 20
# in [BW, RGB, RGBA]
color_mode = RGBA
disable_anti_aliasing = False
# Active when color_mode is RGBA
transparent_background = False
use_hdri = None
hdri_offset = 1.57
synchronize_with_views = True
# Optional parameter;
#      background_color - as 256-stepped RGB or RGBA

[light]
# distant or near
model = distant
# distant ~ 3, near ~ 100
energy = 3
SUN_angle = 0.00918
POINT_size = 0.25
amount = 1
light_directions_file = light.csv
file_normalization = False
# "enable_rendering_by_degree" renders with "degree"-stepped 360 light directions, instead of rendering with light directions file.
# Can choose which axis to use by typing 'X', 'Y', 'Z', or 'True' to render with X axis light.
enable_rendering_by_degree = False
degree = 360
POINT_radius = 0.1
synchronize_with_views = True

[camera]
# Camera location and rotation is fixed at (0, 0, 10m), (0, 0, 0).
# orthographic, perspective or panorama
model = perspective
# Focal length of camera. [mm]
focal_length = 50
sensor_width = 36
sensor_height = 24
# Available parameters;
#      'clip_start', 'clip_end', 'ortho_scale', 'shift_x', 'shift_y' - as a float
#      'use_dof' - as a boolean
# DoF parameters;
#      'focus_distance', 'aperture_fstop', 'aperture_blades', 'aperture_rotation', 'aperture_ratio'
#      - parameters except apareture_blades as a float, blades as an int 

[object]
preset = object_custom
enable_multiple_views = False
object_directions_file = view.csv
# This option enables 360 render.
# Can choose which axis to use by 'X', 'Y', 'Z', or 'True' to render with X axis.
# if 'False' while enable_multiple_degree = True, angles are read from object_directions_file.
enable_rendering_by_degree = True
degree = 60

[object_sphere]
segments = 256
ring_count = 128
radius = 2.0
location = 0, 0, 0
rotation = 0, 0, 0
use_smooth = True
subdivision_surface = False

[object_custom]
location = 0, 0, 0
rotation = 0, 0, 0
# Size of imported object does not through this value 
# 'None' to original size
max_dimension = 3.8
geometry_to_origin = True
use_smooth = True
no_shadow = True

[shader]
preset = solar

[lambertian]
metallic = 0.00
specular = 0.00
roughness = 0.00
sheen_tint = 0.00
clearcoat_roughness = 0.00
ior = 1.00

[sample1]
# Available parameters;
#      Subsurface, Metallic, Specular, Specular Tint, Roughness, Anisotropic,
# Anisotropic Rotation, Sheen, Sheen Tint, Clearcoat, Clearcoat Roughness,
# IOR, Transmission, Transmission Roughness - all above as a float
#      Base Color, Subsurface Color - as 256-stepped RGB or RGBA
metallic = 0.00
specular = 0.50
roughness = 0.24

[sample2]
# Enabling load_uv makes texture wrap with UV, instead of cylinder mapping.
# color, metallic, specular, roughness, sheen, sheentint, and IOR can be textured by image. 
load_uv = True
color_texture = tex/Voronoi.png
metallic_texture = tex/VoronoiM.png
specular_texture = tex/VoronoiM.png
roughness_texture = tex/VoronoiM.png
sheen_texture = tex/VoronoiM.png
sheentint_texture = tex/VoronoiM.png
ior_texture = tex/VoronoiM.png

[solar]
# Enabling load_uv makes texture wrap with UV, instead of cylinder mapping.
# color, metallic, specular, roughness, sheen, sheentint, and IOR can be textured by image. 
load_uv = True
color_texture = tex/solar.jpg
metallic_texture = tex/solar.jpg
specular_texture = tex/solar.jpg
roughness_texture = tex/solar.jpg
sheen_texture = tex/solar.jpg
sheentint_texture = tex/solar.jpg
ior_texture = tex/solar.jpg
